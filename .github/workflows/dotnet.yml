# This workflow will build a .NET project and publish DLLs to a release
# For more information see: 
#   - Building and testing .NET: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
#   - Creating releases: https://docs.github.com/en/actions/creating-releases/creating-releases

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish (only on push to master)
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: built-dlls
          path: $(ProjectDir)/bin/Release/*.dll

  # This job will be triggered only when the build job finishes successfully
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: built-dlls
      - name: Create release (only on push to master)
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needs a release token
        with:
          tag_name: ${{ github.sha }}  # Use the commit SHA as the tag name
          release_name: ${{ github.sha }} - Built DLLs  # Release name with SHA
          body: ${{ steps.build.outputs.build-output }}  # You can optionally add build output here
          draft: false  # Set to true for draft releases
          prerelease: true  # Set to true for pre-releases
          file_glob: '**/*.dll'  # Upload all downloaded dll files
